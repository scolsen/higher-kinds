;; Copyright 2020 Google LLC
;;
;; Licensed under the Apache License, Version 2.0 (the "License");
;; you may not use this file except in compliance with the License.
;; You may obtain a copy of the License at
;;
;;  https://www.apache.org/licenses/LICENSE-2.0
;;
;;  Unless required by applicable law or agreed to in writing, software
;;  distributed under the License is distributed on an "AS IS" BASIS,
;;  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;;  See the License for the specific language governing permissions and
;;  limitations under the License.

(load "typeclasses/monad.carp")
(load "test/box.carp")
(load "Test.carp")
(use Test)

(deftest test
  (assert-equal test
    &(Box 100)
    &(bind (Box 1) &(fn [x] (pure (+ 99 x))))
    "bind works as expected")
  (assert-equal test
    &(Box 100)
    &(let-do [b (Box 1)] (bind! &b &(fn [x] (pure (+ 99 x)))) b)
    "bind! works as expected")
  (assert-equal test
    &(Box 2)
    &(Monad.join (Box (Box 2)))
    "join works as expected")
  (assert-equal test
    &(Box 5)
    &(Monad.reverse-bind &(comp pure inc) (Box 4))
    "reverse-bind works as expected")
  (assert-equal test
    &(Box 2)
    &(the (Box Int) (Monad.compose &(comp pure inc) &(comp pure dec) 2))
    "compose works as expected")
)
